<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Enowitsoft.Base</name>
    </assembly>
    <members>
        <member name="M:Enowitsoft.Base.RandomOperate.GenerateCheckCodeNum(System.Int32)">
            <summary>
            随机生成不重复数字字符串
            </summary>
            <param name="codeCount">生成的字符串位数</param>
            <returns></returns>
        </member>
        <member name="M:Enowitsoft.Base.RandomOperate.GenerateCheckCode(System.Int32)">
            <summary>
            随机生成字符串（数字和字母混和）
            </summary>
            <param name="codeCount">生成的字符串位数</param>
            <returns></returns>
        </member>
        <member name="M:Enowitsoft.Base.RandomOperate.GetRandomCode(System.String,System.Int32)">
            <summary>
            从字符串里随机得到，规定个数的字符串.
            </summary>
            <param name="allChar"></param>
            <param name="CodeCount"></param>
            <returns></returns>
        </member>
        <member name="T:Enowitsoft.Base.RandomHelper">
            <summary>
            使用Random类生成伪随机数
            </summary>
        </member>
        <member name="M:Enowitsoft.Base.RandomHelper.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:Enowitsoft.Base.RandomHelper.GetRandomInt(System.Int32,System.Int32)">
            <summary>
            生成一个指定范围的随机整数，该随机数范围包括最小值，但不包括最大值
            </summary>
            <param name="minNum">最小值</param>
            <param name="maxNum">最大值</param>
        </member>
        <member name="M:Enowitsoft.Base.RandomHelper.GetRandomDouble">
            <summary>
            生成一个0.0到1.0的随机小数
            </summary>
        </member>
        <member name="M:Enowitsoft.Base.RandomHelper.GetRandomArray``1(``0[])">
            <summary>
            对一个数组进行随机排序
            </summary>
            <typeparam name="T">数组的类型</typeparam>
            <param name="arr">需要随机排序的数组</param>
        </member>
        <member name="T:Enowitsoft.Base.DataStructure.ETQueue`1">
            <summary>
            队列结构
            </summary>
        </member>
        <member name="F:Enowitsoft.Base.DataStructure.ETQueue`1._Header">
            <summary>
            头部节点
            </summary>
        </member>
        <member name="F:Enowitsoft.Base.DataStructure.ETQueue`1._LastNode">
            <summary>
            最后一个节点
            </summary>
        </member>
        <member name="M:Enowitsoft.Base.DataStructure.ETQueue`1.Add(Enowitsoft.Base.DataStructure.ETQueueNode{`0})">
            <summary>
            添加一个节点到队列
            </summary>
            <param name="node">要添加到队列的节点</param>
        </member>
        <member name="M:Enowitsoft.Base.DataStructure.ETQueue`1.Add(`0)">
            <summary>
            添加数据并构建一个节点到队列
            </summary>
            <param name="data">要添加的数据</param>
        </member>
        <member name="M:Enowitsoft.Base.DataStructure.ETQueue`1.Peek">
            <summary>
            获取队列首个节点的数据，但不移除该节点。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Enowitsoft.Base.DataStructure.ETQueue`1.Pop">
            <summary>
            获取队列首个节点的数据，并移除该节点。
            </summary>
            <returns></returns>
        </member>
        <member name="M:Enowitsoft.Base.DataStructure.ETQueue`1.IsEmpty">
            <summary>
            获取一个bool值，该值指示当前队列是否为空。
            </summary>
            <returns></returns>
        </member>
        <member name="P:Enowitsoft.Base.DataStructure.ETQueue`1.Count">
            <summary>
            获取队列中元素的个数。
            </summary>
        </member>
        <!-- 对于成员“M:Enowitsoft.Base.DataStructure.ETQueue`1.ETEnumerator.MoveNext”忽略有格式错误的 XML 注释 -->
        <member name="M:Enowitsoft.Base.DataStructure.ETQueue`1.ETEnumerator.Reset">
            <summary>
            重置位置
            </summary>
        </member>
        <member name="M:Enowitsoft.Base.DataStructure.ETQueue`1.ETEnumerator.Dispose">
            <summary>
            释放由 ETEnumerator 使用的所有资源。
            </summary>
        </member>
        <member name="P:Enowitsoft.Base.DataStructure.ETQueue`1.ETEnumerator.Current">
            <summary>
            获取枚举数当前位置的元素。
            </summary>
        </member>
        <member name="T:Enowitsoft.Base.DataStructure.EmptyNodeException">
            <summary>
            空节点异常
            </summary>
        </member>
        <member name="T:Enowitsoft.Base.DataStructure.ETQueueNode`1">
            <summary>
            队列节点
            </summary>
        </member>
        <member name="P:Enowitsoft.Base.DataStructure.ETQueueNode`1.Value">
            <summary>
            节点存放的数据
            </summary>
        </member>
        <member name="P:Enowitsoft.Base.DataStructure.ETQueueNode`1.NextNode">
            <summary>
            下一个节点
            </summary>
        </member>
        <member name="P:Enowitsoft.Base.DataStructure.ETQueueNode`1.PrevNode">
            <summary>
            上一个节点
            </summary>
        </member>
        <member name="T:Enowitsoft.Base.TimeHelper">
            <summary>
            时间类
            </summary>
        </member>
        <member name="M:Enowitsoft.Base.TimeHelper.GetFormatDate(System.DateTime,System.Char)">
            <summary>
            将时间格式化成 年月日 的形式,如果时间为null，返回当前系统时间
            </summary>
            <param name="dt">年月日分隔符</param>
            <param name="Separator"></param>
            <returns></returns>
        </member>
        <member name="M:Enowitsoft.Base.TimeHelper.GetFormatTime(System.DateTime,System.Char)">
            <summary>
            将时间格式化成 时分秒 的形式,如果时间为null，返回当前系统时间
            </summary>
            <param name="dt"></param>
            <param name="Separator"></param>
            <returns></returns>
        </member>
        <member name="M:Enowitsoft.Base.TimeHelper.SecondToMinute(System.Int32)">
            <summary>
            把秒转换成分钟
            </summary>
            <returns></returns>
        </member>
        <member name="M:Enowitsoft.Base.TimeHelper.GetMonthLastDate(System.Int32,System.Int32)">
            <summary>
            返回某年某月最后一天
            </summary>
            <param name="year">年份</param>
            <param name="month">月份</param>
            <returns>日</returns>
        </member>
        <member name="M:Enowitsoft.Base.TimeHelper.DateDiff2(System.DateTime,System.DateTime)">
            <summary>
            获得两个日期的间隔
            </summary>
            <param name="DateTime1">日期一。</param>
            <param name="DateTime2">日期二。</param>
            <returns>日期间隔TimeSpan。</returns>
        </member>
        <member name="M:Enowitsoft.Base.TimeHelper.FormatDate(System.DateTime,System.String)">
            <summary>
            格式化日期时间
            </summary>
            <param name="dateTime1">日期时间</param>
            <param name="dateMode">显示模式</param>
            <returns>0-9种模式的日期</returns>
        </member>
        <member name="M:Enowitsoft.Base.TimeHelper.GetRandomTime(System.DateTime,System.DateTime)">
            <summary>
            得到随机日期
            </summary>
            <param name="time1">起始日期</param>
            <param name="time2">结束日期</param>
            <returns>间隔日期之间的 随机日期</returns>
        </member>
        <member name="T:Enowitsoft.Base.BaseRandom">
            <summary>
            BaseRandom
            产生随机数
            
            随机数管理，最大值、最小值可以自己进行设定。
            </summary>
        </member>
        <member name="M:Enowitsoft.Base.BaseRandom.GetRandomString">
            <summary>
            产生随机字符
            </summary>
            <returns>字符串</returns>
        </member>
        <member name="M:Enowitsoft.Base.BaseRandom.GetRandom">
            <summary>
            产生随机数
            </summary>
            <returns>随机数</returns>
        </member>
        <member name="M:Enowitsoft.Base.BaseRandom.GetRandom(System.Int32,System.Int32)">
            <summary>
            产生随机数
            </summary>
            <param name="minimum">最小值</param>
            <param name="maximal">最大值</param>
            <returns>随机数</returns>
        </member>
    </members>
</doc>
